package test

// Code generated by github.com/Khan/genql, DO NOT EDIT.

import (
	"context"

	"github.com/Khan/genql/graphql"
)

type InputObjectQueryResponse struct {
	User *InputObjectQueryUser `json:"user"`
}

type InputObjectQueryUser struct {
	Id string `json:"id"`
}

type UserQueryInput struct {
	Email *string             `json:"email"`
	Name  *string             `json:"name"`
	Id    *string             `json:"id"`
	Role  *UserQueryInputRole `json:"role"`
	Names []*string           `json:"names"`
}

type UserQueryInputRole string

const (
	UserQueryInputRoleStudent UserQueryInputRole = "STUDENT"
	UserQueryInputRoleTeacher UserQueryInputRole = "TEACHER"
)

func InputObjectQuery(client *graphql.Client, query *UserQueryInput) (*InputObjectQueryResponse, error) {
	variables := map[string]interface{}{
		"query": query,
	}

	var retval InputObjectQueryResponse
	err := client.MakeRequest(context.Background(), `
query InputObjectQuery ($query: UserQueryInput) {
	user(query: $query) {
		id
	}
}
`, &retval, variables)
	return &retval, err
}
