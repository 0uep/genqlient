package test

// Code generated by github.com/Khan/genql, DO NOT EDIT.

import (
	"github.com/Khan/genql/graphql"
)

type unexportedResponse struct {
	User unexportedUser `json:"user"`
}

type unexportedUser struct {
	Id string `json:"id"`
}

type userQueryInput struct {
	Email string             `json:"email"`
	Name  string             `json:"name"`
	Id    string             `json:"id"`
	Role  userQueryInputRole `json:"role"`
	Names []string           `json:"names"`
}

type userQueryInputRole string

const (
	userQueryInputRoleStudent userQueryInputRole = "STUDENT"
	userQueryInputRoleTeacher userQueryInputRole = "TEACHER"
)

func unexported(
	client *graphql.Client,
	query userQueryInput,
) (*unexportedResponse, error) {
	variables := map[string]interface{}{
		"query": query,
	}

	var retval unexportedResponse
	err := client.MakeRequest(
		nil,
		`
query unexported ($query: UserQueryInput) {
	user(query: $query) {
		id
	}
}
`,
		&retval,
		variables,
	)
	return &retval, err
}
